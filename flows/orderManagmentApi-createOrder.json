{
	"schemaVersion": "4",
	"info": {
		"name": "createOrder"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "javascript.1",
	"nodes": {
		"kafka.1": {
			"type": "nodehandler://@axway/api-builder-plugin-ft-kafka/kafka",
			"name": "Publish JSON",
			"method": "publishJSON",
			"parameters": [
				{
					"name": "topic",
					"type": "string",
					"value": "\"order-events\"",
					"metaName": "Topic",
					"metaDescription": "The topic."
				},
				{
					"name": "channelId",
					"type": "string",
					"value": "\"kafka-1\"",
					"metaName": "Channel ID",
					"metaDescription": "The Kafka channel ID as configured in triggers/kafka.yml."
				},
				{
					"name": "message",
					"type": "jsonpath",
					"value": "$.created",
					"metaName": "Message",
					"metaDescription": "The message to publish."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"http.1"
					],
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Publish JSON"
		},
		"orders.1": {
			"type": "nodehandler://api-builder-flow-invoke/model/mysql/orders",
			"name": "Create",
			"method": "create",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.params",
					"metaName": "data"
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"kafka.1"
					],
					"context": "$.created",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Create"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Execute",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"console.log(data.params);\\n \\n const status = {\\n   status: 'PENDING'\\n};\\n\\n\\treturn Object.assign(data.params, status);\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"orders.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		}
	}
}