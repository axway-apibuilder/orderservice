{
	"schemaVersion": "4",
	"info": {
		"name": "createSyncOrder"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "javascript.1",
	"nodes": {
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Execute",
			"method": "Execute",
			"parameters": [
				{
					"name": "code",
					"type": "string",
					"value": "\"const status = {\\n   \\t\\tstatus: 'PENDING'\\n\\t};\\n\\treturn Object.assign(data.params.body, status);\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"orders.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"orders.1": {
			"type": "nodehandler://api-builder-flow-invoke/model/mysql/orders",
			"name": "Create",
			"method": "create",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.params.body",
					"metaName": "data"
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"mustache.1"
					],
					"context": "$.created",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Create"
		},
		"inventory.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/inventory",
			"name": "deductInventory",
			"method": "deductInventory",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.inventoryRequest",
					"metaName": "body",
					"metaDescription": "The request body.  Please refer to the info icon for schema."
				}
			],
			"outputs": {
				"200": {
					"routes": [
						"mustache.2"
					],
					"context": "$.inventoryResponse",
					"metaName": "200"
				},
				"400": {
					"routes": [
						"http.2"
					],
					"context": "$.inventoryResponse",
					"metaName": "400"
				},
				"401": {
					"routes": [
						"http.2"
					],
					"context": "$.inventoryResponse",
					"metaName": "401"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				},
				"default": {
					"routes": [],
					"context": "$.inventoryResponse",
					"metaName": "Default"
				}
			},
			"authorizations": [
				{
					"name": "basicAuth",
					"type": "credential",
					"value": "inventoryservice basicAuth"
				}
			],
			"metaMethod": "deductInventory"
		},
		"mustache.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-mustache/mustache",
			"name": "Format string",
			"method": "format",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to assign to the \"data\" variable in the template."
				},
				{
					"name": "template",
					"type": "string",
					"value": "\"{\\n  \\\"id\\\": \\\"{{data.params.body.productId}}\\\",\\n  \\\"quantity\\\": {{data.params.body.quantity}},\\n  \\\"price\\\": {{data.params.body.price}}\\n}\"",
					"metaName": "Template",
					"metaDescription": "The Mustache template. e.g. `Hi {{data.user}}`."
				}
			],
			"outputs": {
				"next": {
					"context": "$.inventoryRequest",
					"routes": [
						"javascript.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"payment.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/payment",
			"name": "debitPayment",
			"method": "debitPayment",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.debitPaymentRequest",
					"metaName": "body",
					"metaDescription": "The request body.  Please refer to the info icon for schema."
				}
			],
			"outputs": {
				"200": {
					"routes": [
						"mustache.3"
					],
					"context": "$.paymentResponse",
					"metaName": "200"
				},
				"400": {
					"routes": [
						"http.2"
					],
					"context": "$.paymentResponse",
					"metaName": "400"
				},
				"401": {
					"routes": [
						"http.2"
					],
					"context": "$.paymentResponse",
					"metaName": "401"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.paymentResponse",
					"metaName": "Error"
				},
				"default": {
					"routes": [],
					"context": "$.paymentResponse",
					"metaName": "Default"
				}
			},
			"authorizations": [
				{
					"name": "basicAuth",
					"type": "credential",
					"value": "paymentservice basicAuth"
				}
			],
			"metaMethod": "debitPayment"
		},
		"mustache.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-mustache/mustache",
			"name": "Format string",
			"method": "format",
			"parameters": [
				{
					"name": "template",
					"type": "string",
					"value": "\"{\\n  \\\"userId\\\": \\\"{{data.params.body.userId}}\\\",\\n  \\\"transactionAmount\\\": {{data.params.body.price}}\\n}\"",
					"metaName": "Template",
					"metaDescription": "The Mustache template. e.g. `Hi {{data.user}}`."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to assign to the \"data\" variable in the template."
				}
			],
			"outputs": {
				"next": {
					"context": "$.debitPaymentRequest",
					"routes": [
						"javascript.4"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"mustache.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-mustache/mustache",
			"name": "Format string",
			"method": "format",
			"parameters": [
				{
					"name": "template",
					"type": "string",
					"value": "\"{\\n\\t\\\"inventory\\\":{\\n    \\t{{data.inventoryResponse}}\\n    },\\n\\t\\\"payment\\\":{\\n    \\t{{data.paymentResponse}}\\n    }\\n}\"",
					"metaName": "Template",
					"metaDescription": "The Mustache template. e.g. `Hi {{data.user}}`."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to assign to the \"data\" variable in the template."
				}
			],
			"outputs": {
				"next": {
					"context": "$.value",
					"routes": [
						"javascript.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Execute",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"console.log(data.value);\\n  data.created.status=\\\"PAYMENTSUCCESSINVENTORYSUCCESS\\\";\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"orders.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"orders.2": {
			"type": "nodehandler://api-builder-flow-invoke/model/mysql/orders",
			"name": "Update",
			"method": "update",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.created",
					"metaName": "data"
				},
				{
					"name": "id",
					"type": "jsonpath",
					"value": "$.created.id",
					"metaName": "id"
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"http.1"
					],
					"context": "$.updated",
					"metaName": "Next"
				},
				"notfound": {
					"routes": [
						"http.2"
					],
					"metaName": "Not Found"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Update"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.updated",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Format String to JSON",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"var json = JSON.parse(data.inventoryRequest);\\n  data.inventoryRequest = json;\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"inventory.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.4": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Execute",
			"method": "Execute",
			"parameters": [
				{
					"name": "code",
					"type": "string",
					"value": "\"var json = JSON.parse(data.debitPaymentRequest);\\n  data.debitPaymentRequest = json;\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"payment.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		}
	}
}